#!/bin/sh

if [ "$(uname -s)" == "Linux" ]; then
    OS=`uname -o`
    DISTRIB="Unknown"
    KERNEL_RELEASE=`uname -r`
    KERNEL_VERSION=`uname -v`
    KERNEL="${KERNEL_RELEASE} ${KERNEL_VERSION}"
    ARCH=`uname -m`

    if [ -f /etc/arch-release ]; then
	DISTRIB="Arch Linux"

    elif grep "Ubuntu" /etc/lsb-release 2>&1 1>/dev/null; then
	. /etc/lsb-release
	DISTRIB=$DISTRIB_DESCRIPTION

    elif [ -f /etc/ordissimo/version ]; then
	DISTRIB_VERSION=`cat /etc/lsb-release | grep DISTRIB_RELEASE | cut -d '=' -f 2`
	MACHINE_CODENAME=`cat /etc/ordissimo/version | grep ORDISSIMO_VERSION= | cut -d '=' -f 2`
	DEBIAN_VERSION=`cat /etc/debian_version | tr -d '\n'`
	DISTRIB="Ordissimo-${DISTRIB_VERSION} ${MACHINE_CODENAME} (Debian ${DEBIAN_VERSION})"

    elif [ -f /etc/debian_version ]; then
	DISTRIB_VERSION=`lsb_release -r | cut -d ':' -f 2 | cut -f 2`
	DISTRIB_CODENAME=`lsb_release -c | cut -d ':' -f 2 | cut -f 2`
	DISTRIB="Debian ${DISTRIB_VERSION} (${DISTRIB_CODENAME})"

    elif [ -f /etc/SUSE-release ]; then
	DISTRIB="SUSE"

    elif [ -f /etc/redhat-release ]; then
	DISTRIB="RedHat"

    elif [ -f /etc/fedora-release ]; then
	DISTRIB="Fedora"

    elif [ -f /etc/slackware-release ]; then
	DISTRIB="Slackware"

    elif [ -f /etc/mandrake-release ]; then
	DISTRIB="Mandrake"

    elif [ -f /etc/yellowdog-release ]; then
	DISTRIB="Yellow Dog"

    elif [ -f /etc/gentoo-release ]; then
	DISTRIB="Gentoo"

    elif [ -f /etc/UnitedLinux-release ]; then
	DISTRIB="UnitedLinux"
    fi

elif [ "$(uname)" == "Darwin" ]; then
    OS="Mac OS X"
    DISTRIB="Unknown"
    KERNEL="Unknown"
    ARCH="Unknown"

elif [ "$(uname -s)" == "SunOS" ]; then
    OS=Solaris
    DISTRIB="Unknown"
    KERNEL="Unknown"
    ARCH=`uname -p`

elif [ "$(uname -s)" == "AIX" ]; then
    OS="AIX"
    DISTRIB="Unknown"
    KERNEL="Unknown"
    ARCH="Unknown"

elif [ "${OS}" == "Windows_NT" ]; then
    OS="Microsoft Windows"

    SCRIPT="/tmp/windows_version.bat"
    echo -e "@echo off\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\" /v \"ProductName\"" > "${SCRIPT}"
    chmod 755 "${SCRIPT}"

    DISTRIB_VERSION=`cmd /c ver | sed '1d' | cut -d ' ' -f 4 | cut -d ] -f 1`
    DISTRIB_RELEASE=`${SCRIPT} | grep ProductName | cut -d ' ' -f 13-`

    DISTRIB="${DISTRIB_RELEASE} (${DISTRIB_VERSION})"
    KERNEL="Unknown"
    ARCH="Unknown"

    EMULATED_ENVIRONMENT=true
    UNIX_EMULATOR="`uname -o` (`uname -s`)"
    EMULATED_KERNEL_RELEASE=`uname -r`
    EMULATED_KERNEL_VERSION=`uname -v`
    EMULATED_KERNEL="${EMULATED_KERNEL_RELEASE} ${EMULATED_KERNEL_VERSION}"
    EMULATED_ARCH=`uname -m`
fi

if [ "$1" == "--export-stdout" ] || [ "$1" == "-e" ]; then
  echo "OS=${OS}"
  echo "DISTRIB=${DISTRIB}"
  echo "KERNEL=${KERNEL}"
  echo "ARCH=${ARCH}"

elif [ "$1" != "--quiet" ] && [ "$1" != "-q" ]; then
  echo "Operating system: ${OS}"
  echo "System distribution: ${DISTRIB}"
  echo "Kernel: ${KERNEL}"
  echo "Processor architecure: ${ARCH}"

  if [ ! -z "${EMULATED_ENVIRONMENT+x}" ]; then
    echo
    echo "Unix emulator: ${UNIX_EMULATOR}"
    echo "Emulated kernel: ${EMULATED_KERNEL}"
    echo "Emulated architecure: ${EMULATED_ARCH}"
  fi
fi

export OS=${OS}
export DISTRIB=${DISTRIB}
export KERNEL=${KERNEL}
export ARCH=${ARCH}
